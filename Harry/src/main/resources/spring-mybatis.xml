<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <context:property-placeholder ignore-unresolvable="true" location="classpath:dataBase.properties" />
    <context:component-scan base-package="harry.Service" />

    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
        <!--&lt;!&ndash;驱动类名 &ndash;&gt;-->
        <!--<property name="driverClass" value="${mysql.driver}" />-->
        <!--&lt;!&ndash; url &ndash;&gt;-->
        <!--<property name="jdbcUrl" value="${mysql.url}" />-->
        <!--&lt;!&ndash; 用户名 &ndash;&gt;-->
        <!--<property name="user" value="${mysql.user}" />-->
        <!--&lt;!&ndash; 密码 &ndash;&gt;-->
        <!--<property name="password" value="${mysql.password}" />-->
        <!--&lt;!&ndash; 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 &ndash;&gt;-->
        <!--<property name="acquireIncrement" value="${mysql.acquireIncrement}"></property>-->
        <!--&lt;!&ndash; 初始连接池大小 &ndash;&gt;-->
        <!--<property name="initialPoolSize" value="${mysql.initialPoolSize}"></property>-->
        <!--&lt;!&ndash; 连接池中连接最小个数 &ndash;&gt;-->
        <!--<property name="minPoolSize" value="${mysql.minPoolSize}"></property>-->
        <!--&lt;!&ndash; 连接池中连接最大个数 &ndash;&gt;-->
        <!--<property name="maxPoolSize" value="${mysql.maxPoolSize}"></property>-->

    <!--</bean>-->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${mysql.driver}" />

        <!-- 基本属性 url、user、password -->
        <property name="url" value="${mysql.url}" />
        <property name="username" value="${mysql.user}" />
        <property name="password" value="${mysql.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${mysql.initialPoolSize}" />
        <property name="minIdle" value="${mysql.minPoolSize}" />
        <property name="maxActive" value="${mysql.maxPoolSize}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="${mysql.testSql}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 4.配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- sql映射文件路径 -->
        <!-- 自动扫描com/demo/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置
        value="classpath:com/demo/mapping/*.xml"指的是classpath(类路径)下com.demo.mapping包中的所有xml文件 -->
        <property name="mapperLocations" value="classpath:harry/Mapper/*.xml" />
    </bean>

    <!-- 5.配置扫描器  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描com.demo.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="harry.Dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 注解方式配置事物 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!--&lt;!&ndash; 拦截器方式配置事物 &ndash;&gt;-->
    <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="insert*" propagation="REQUIRED" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED" />-->

            <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
            <!--<tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
            <!--<tx:method name="select*" propagation="SUPPORTS" read-only="true" />-->

        <!--</tx:attributes>-->
    <!--</tx:advice>-->


</beans>